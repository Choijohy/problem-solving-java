# // 1. 가장 많은 데이터를 생성한 MEMBER_ID를 추출한다
# // 2. 해당 MEMBER_ID로 작성된 리뷰를 WHERE로 뽑아낸다
# // 3. JOIN을 걸어서 MEMBER_ID와 조인되는 USER_NAME을 함께 출력한다


WITH CTE AS(
    SELECT
    MEMBER_ID,
    COUNT(*) AS REVIEW_COUNT
    FROM
    REST_REVIEW
    GROUP BY MEMBER_ID
    ORDER BY REVIEW_COUNT DESC
),
MAX_COUNT AS(
    SELECT
        MEMBER_ID,
        REVIEW_COUNT,
        DENSE_RANK() OVER(ORDER BY REVIEW_COUNT DESC) AS RANKING
    FROM CTE
)
SELECT
    f.MEMBER_NAME,
    r.REVIEW_TEXT,
    DATE_FORMAT(r.REVIEW_DATE, '%Y-%m-%d') AS REVIEW_DATE
FROM MAX_COUNT m
JOIN REST_REVIEW r ON r.MEMBER_ID = m.MEMBER_ID
JOIN MEMBER_PROFILE f ON f.MEMBER_ID = m.MEMBER_ID
WHERE RANKING = 1
ORDER BY r.REVIEW_DATE ASC, r.REVIEW_TEXT ASC;



SELECT
    p.MEMBER_NAME,
    r.REVIEW_TEXT,
    DATE_FORMAT(r.REVIEW_DATE,"%Y-%m-%d") AS REVIEW_DATE
FROM
CTE cte
JOIN MEMBER_PROFILE p ON p.MEMBER_ID = cte.MEMBER_ID
JOIN REST_REVIEW r ON r.MEMBER_ID = cte.MEMBER_ID
WHERE CTE.REVIEW_COUNT = (SELECT MAX(REVIEW_COUNT) FROM CTE)
ORDER BY r.REVIEW_DATE ASC, r.REVIEW_TEXT ASC;